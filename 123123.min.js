
document.addEventListener('keydown', function(event){
    if(
　　　　112 == event.keyCode || 
　　　　123 == event.keyCode || 
　　　　event.ctrlKey && 82 == event.keyCode || 
       event.ctrlKey && 　event.shiftKey && (74 === 　event.keyCode || 73 === 　event.keyCode) || 
　　　　event.ctrlKey && 78 == event.keyCode || 
　　　　event.shiftKey && 121 == event.keyCode || 
　　　　event.altKey && 115 == event.keyCode || 
　　　　"A" == event.srcElement.tagName && event.shiftKey 
　　){
     toastr.error('不要搞事情我跟你讲!', '你想干嘛!');
     return event.returnValue = false;
    }
});


document.addEventListener('contextmenu', function(event){
   toastr.error('禁止右键/长按！', '不要搞事情我跟你讲!');
   return event.returnValue = false;
});

var resize=true;

window.addEventListener('resize', function (event){
    var threshold = 200;
    var widthThreshold = window.outerWidth - window.innerWidth > threshold;
    var heightThreshold = window.outerHeight - window.innerHeight > threshold;
    if(widthThreshold || heightThreshold){
        if(resize){
            resize=false;
            toastr.error('居然想到这种方法,你以为我想不到吗，哈哈', '不要搞事情我跟你讲!大小');
        }
    }
});


var observerConsole = {
    openCallback: function(){
        try {
            toastr.error('居然想到这种方法,你以为我想不到吗，哈哈', '不要搞事情我跟你讲!');
            window.open("about:blank", "_self");
        } catch(e) {
            var btn = document.createElement("button");
            btn.onclick = function() {
                toastr.error('居然想到这种方法,你以为我想不到吗，哈哈', '不要搞事情我跟你讲!');
                window.open("about:blank", "_self")
            
            }
            btn.click()
        }
    },
    observer: function(){
        
        var dom = document.createElement("div"), that = this;
        Object.defineProperty(dom, "id", {
            get: function(){
                that.openCallback()
            }
        })
        
        
        console.log(dom);
    },
    observerF: function(){
        var obj = Object.create(null), t = Date.now(), that = this;
        Object.defineProperty(obj, "a", {
            get: function() {
                if(Date.now() - t > 100){
                    that.openCallback()
                }
            }
        })
        setInterval(function(){
            t = Date.now();
            (function(){})["constructor"]("debugger")();
            console.log(obj.a);
        }, 200);
    },
    init: function(){
        var t = window.navigator.userAgent.toLowerCase();
        t.indexOf("firefox") >= 0 ? this.observerF() : this.observer();
    }
}

observerConsole.init();

!function(){
    var _0x1cbb = ["tor", "struc", "call", "ger", "con", "bug", "de", "apply"];
    setInterval(check, 2e3);
    function check() {
        function doCheck(_0x1834ff) {
            if (('' + _0x1834ff / _0x1834ff)['length'] !== 0x1 || _0x1834ff % 0x14 === 0x0) {
                (function() {return !![]}[
                    _0x1cbb[0x4] + _0x1cbb[0x1] + _0x1cbb[0x0]
                ](
                    _0x1cbb[0x6] + _0x1cbb[0x5] + _0x1cbb[0x3]
                )[_0x1cbb[0x2]]());
            } else {
                (function() {return ![]}[
                    _0x1cbb[0x4] + _0x1cbb[0x1] + _0x1cbb[0x0]
                ](
                    _0x1cbb[0x6] + _0x1cbb[0x5] + _0x1cbb[0x3]
                )[_0x1cbb[0x7]]());
            }
            doCheck(++_0x1834ff);
        }
        try {
            doCheck(0)
        } catch(err) { }
    };
}();